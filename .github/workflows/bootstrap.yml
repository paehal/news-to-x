name: Bootstrap

on:
  workflow_dispatch:

permissions:
  contents: write
  issues: write

concurrency:
  group: bootstrap-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Validate secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
          X_CLIENT_SECRET: ${{ secrets.X_CLIENT_SECRET }}
        run: |
          node -e "const req=['OPENAI_API_KEY','X_CLIENT_ID','X_CLIENT_SECRET'];const miss=req.filter(k=>!process.env[k]);if(miss.length){console.error('Missing secrets:',miss.join(', '));process.exit(1)}console.log('Secrets OK')"

      - name: Ensure news-proposal label
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const name = 'news-proposal';
            const color = '666666';
            const description = 'Auto-generated news suggestions';
            try {
              await github.rest.issues.getLabel({ owner, repo, name });
              core.info('Label already exists');
            } catch (e) {
              if (e.status === 404) {
                await github.rest.issues.createLabel({ owner, repo, name, color, description });
                core.info('Label created');
              } else {
                throw e;
              }
            }
